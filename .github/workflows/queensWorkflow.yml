name: Queens Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT (Using OIDC)
  contents: write # This is required for actions/checkout (Using OIDC)
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: deploymentgate
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
          cache: "maven"

      - name: Build
        run: mvn --batch-mode -DskipTests package

      # - name: Azure login
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ vars.ARM_CLIENT_ID }}
      #     tenant-id: ${{ vars.EQL_AZUREAD_TENANT_ID }}
      #     subscription-id: ${{ vars.ACR_ARM_SUBSCRIPTION_ID }}

      # - name: Build the Docker image
      #   run: |
      #     az acr login -n ${{ vars.ACR_LOGIN_SERVER }}
      #     docker build . --file Dockerfile --tag ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.IMAGE_NAME }}:dev-latest
      #     docker push ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.IMAGE_NAME }}:dev-latest
  snchange:
      name: Deploy
      needs: build
      runs-on: ubuntu-latest
      steps:     
        - name: ServiceNow Change
          uses: ServiceNow/servicenow-devops-change@v3.0.0
          with:
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            context-github: ${{ toJSON(github) }}
            job-name: 'Deploy'
            change-request: '{"setCloseCode":"true","autoCloseChange":true,"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
            interval: '100'
            timeout: '3600'
            changeCreationTimeOut: '3600'
            abortOnChangeCreationFailure: true
            abortOnChangeStepTimeout: true
            deployment-gate: '{"environment":"deploymentgate","jobName":"Deploy"}'
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: dev
  #   steps:
  #     - name: Azure login
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ vars.ARM_CLIENT_ID }}
  #         tenant-id: ${{ vars.EQL_AZUREAD_TENANT_ID }}
  #         subscription-id: ${{ vars.ACR_ARM_SUBSCRIPTION_ID }}

  #     - name: Delete the existing instance
  #       run: |
  #         az container delete --name ${{ vars.IMAGE_NAME }}-dev --resource-group ${{ vars.RESOURCE_GROUP }} --yes

  #     - name: "Deploy to Azure Container Instances"
  #       uses: "azure/aci-deploy@v1"
  #       with:
  #         resource-group: ${{ vars.RESOURCE_GROUP }}
  #         dns-name-label: ${{ vars.IMAGE_NAME }}-dev
  #         image: ${{ vars.ACR_LOGIN_SERVER }}/${{ vars.IMAGE_NAME }}:dev-latest
  #         registry-login-server: ${{ vars.ACR_LOGIN_SERVER }}
  #         registry-username: ${{ secrets.REGISTRY_USERNAME }}
  #         registry-password: ${{ secrets.REGISTRY_PASSWORD }}
  #         name: ${{ vars.IMAGE_NAME }}-dev
  #         cpu: 1
  #         memory: 1
  #         ports: 8000 80
  #         location: "Australia East"
